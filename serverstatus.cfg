/**********************************************************
*** Configuration file									 ***
**********************************************************/

// may be necessary at some point
version = "v0.6-beta";


// path where output files shell be saved at
filepath = "/usr/local/etc/serverstatus/";


distribution = 
{
	// application behaviour:
	//  1) server - listen for a transmission of other clients
	//  2) client - send data to a server
	//  3) standalone
	application = "server";

	// change to server ip (or url) if application is set to client
	server_address = "127.0.0.1";

	// change to port on which a server should listen or
	// a client should send data to
	server_port = "4242";
	
	// specify if traffic should be encrypted
	ssl = true;
	
	// provide a certificate and keyfile on server side to encrypt traffic
	// Note: Provide a absolute path!
	certificate = "/serverstatus.pem";
	key = "/serverstatus.pem";
	
}


sections = [
	"load_imac",
	"cpu_imac"
]


load_imac = 
{
	interval = 1;
	elements = 30;
	
	type = "load";
	
	input = "CMD";
	output = "JSON";
	
	sequence = {
		cmd = ["uptime | awk '{print $(NF-2)}' | sed 's/,/./'",
		       "uptime | awk '{print $(NF-1)}' | sed 's/,/./'",
		       "uptime | awk '{print $(NF)}'   | sed 's/,/./'"];
		title = ["1 Minute", 
		         "5 Minutes", 
		         "15 Minutes"];
		colors = ["red",
		          "green",
		          "blue"];
	}
	
	json = {
		filename = "imac_load.json";
		header = {
			title = "Load Average",
			type = "line",
			refreshEveryNSeconds = 60,
			yAxis = { 
				minValue = 0,
				maxValue = 3
			}
		};
	}	
}

cpu_imac = 
{
	interval = 2;
	elements = 30;
	
	delta = true;
	
	input = "RECEIVE FROM 127.0.0.1 ID MCBK2012";
	output = "CSV";
	
	sequence = {
		title = ["Core 1", 
		         "Core 2"];
		colors = ["red",
		          "green"];
	}
	
	csv = {
		filename = "imac_cpu.csv";
		title = "CPU Temperature";
	}
}